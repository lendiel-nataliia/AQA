Git — розподілена система керування версіями файлів та спільної роботи. Проєкт створив Лінус Торвальдс для керування розробкою ядра Linux, а сьогодні підтримується Джуніо Хамано (англ. Junio C. Hamano). Git є однією з найефективніших, надійних і високопродуктивних систем керування версіями, що надає гнучкі засоби нелінійної розробки, що базуються на відгалуженні і злитті гілок. Для забезпечення цілісності історії та стійкості до змін заднім числом використовуються криптографічні методи, також можлива прив'язка цифрових підписів розробників до тегів і комітів.

Створення локального репозиторію
Додаємо всі файли

$ cd <path_project> #Шлях до проєкту (наприклад: $ cd с:/www/git). Переходимо в існуючу теку, в якій буде розміщений проєкт

$ git init #Ініціалізація репозиторію. Створює в каталозі Project каталог .git і в ньому всі необхідні файли репозиторію

$ git add . #Додаємо всі файли, які наявні в каталозі Project, під версійний контроль

$ git commit -m "Коментар" #Фіксуємо зміни
Клонувати проєкт з віддаленого сервера в локальний каталог

$ git clone <remote_path_project> #Проєкт буде клоновано з віддаленого сервера у поточний локальний каталог (наприклад, https://github.com/git/git.git)
Отримати останні зміни проєкту з віддаленого сервера

$ git pull #Всі файли будуть оновлені до останньої версії з віддаленого сервера
Перегляд історії змін

$ git log #Відображає всі зміни, зроблені в поточній гілці проєкту в хронологічному порядку
Видалення файлів
Видалення з індексу

$ git rm --cached README.txt #Видалення файлу README.txt з індексу, тобто він фізично залишається, але зміни в ньому не відслідковуються
Видалення з репозиторію

$ git rm README.txt #Видалення файлу README.txt з робочого каталогу та індексу  !!! Використовувати уважно!
Рекурсивне видалення

$ git rm --cached -r . #Видалення з індексу всіх файлів в поточному каталозі, включаючи вкладені каталоги
Робота з декількома гілками
Створення нової гілки

$ git branch new_branch # Створення нової гілки з назвою new_branch

$ git checkout new_branch # Переключення на гілку new_branch
Перегляд всіх гілок
$ git branch # Переглянути всі гілки